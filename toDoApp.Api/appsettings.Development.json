{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "swaggerDesc": "<h1>Weekly Planner</h1>\n\nProjede iki adet executable uygulama bulunmaktadır. Bunlar; toDoApp.Api ve toDoApp.Command.\n\nUygulamalar veritabananı olarak toDoApp.Database kütüphanesi kullanmaktadır. İçerisinde basic işlemler ve tablo olarak\nkullanılan List tipinde değişkenlere sahiptir.\n\n<h3>toDoApp.Command</h3>\nBir console uygulamasıdır. Config dosyasından okuduğu client'lara istek atarak ilgili verileri veritabanına yazmaktan\nsorumludur. Eğer yeni bir client yani provider dahil edilmek istenirse yalnızca config dosyasına eklenmesi yeterlidir.\n\n<h3>toDoApp.Api</h3>\nWeb server endpointlerinin dönüş tipi sabit tutulmalıdır (DataResult). Tek bir endpointe sahiptir. Bu endpointin\nsorumluluğu veritabanından okuduğu task'ları zorluk ve süresine göre ilgili developer'a atayarak haftalık planlama\nyapmaktır. Bu endpointin response'unda TotalDurationString alanı yer almaktadır ve task'ların süre hesabına yaparak\nmesela1 hafta 6 saat şeklinde dönüş sağlamaktadır. Tabi bunula birlikte developer'ların yapacakları task'larda\nresponse'da yer almaktedır.\n<br>\nWeb Api'da bulunan ResponseLoggingActionAttribute'ne sahip controller'ın response'ları loglanması sağlanmaktadır. Bu\nattribute'da BaseController'da yer aldığı için bütün istekler loglanacaktır. Bunun yanında okenRequiredAttribute ile\nheader'dan token kontrolü yapılarak istenmeye isteklerin önüne geçilmesi sağlanışmıştır. Log, bug ya da genel tracing\niçin CorrelationIdMiddleware ile request oluşturulurken oluşan CorrelationId ile istek trace edilebilir.\n"
}
